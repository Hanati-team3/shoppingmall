<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="kr.or.kosta.shoppingmall.user">


	<!-- 유저 등록 -->
	<insert id="create" parameterType="User">
		INSERT INTO users
		(id,
		name,
		passwd,
		email,
		regdate)
		VALUES (#{id},
		#{name},
		#{passwd},
		#{email},
		SYSDATE)
	</insert>

	<!-- 아이디로 유저 조회 -->
	<select id="read" parameterType="String" resultType="User">
		SELECT id,
		name,
		passwd,
		email,
		TO_CHAR(regdate, 'YYYY\"년\" MM\"월\" DD\"일\" DAY') "regdate"
		FROM users
		WHERE id = #{value}
	</select>


	<!-- 유저 정보 수정(set, if 태그를 이용한 동적 SQL) -->
	<update id="update" parameterType="User">
		UPDATE users
		<set>
			<if test="name != null">name = #{name},</if>
			<if test="passwd != null">passwd = #{passwd},</if>
			<if test="email != null">email = #{email}</if>
			<!-- MyBatis는 SET절의 끝에 콤마(,)가 있으면 제거 -->
		</set>
		WHERE id = #{id}
	</update>

	<!-- 유저 삭제 -->
	<delete id="delete" parameterType="String">
		DELETE FROM users
		WHERE
		employee_id = #{value}
	</delete>

	<!-- 전체 유저 조회를 위한 SQL 매핑 -->
	<select id="listAll" resultType="User">
		SELECT id,
		name,
		passwd,
		email,
		TO_CHAR(regdate, 'YYYY\"년\" MM\"월\" DD\"일\" DAY') "regdate"
		FROM users
		ORDER BY regdate ASC
	</select>

	<!-- 아이디, 비밀번호로 유저 확인 -->
	<select id="certify" parameterType="map" resultType="User">
		SELECT id,
		name,
		passwd,
		email,
		TO_CHAR(regdate, 'YYYY\"년\" MM\"월\" DD\"일\" DAY') "regdate"
		FROM users
		WHERE id = #{id} AND passwd = #{passwd}
	</select>

	<!-- 검색 및 페이징 처리 -->
	<select id="listByPage" parameterType="map" resultType="User">
		SELECT employee_id,
		name,
		passwd,
		email,
		regdate
		FROM (SELECT CEIL(rownum / #{listSize}) request_page,
		id,
		name,
		passwd,
		email,
		regdate
		FROM (SELECT id,
		name,
		passwd,
		email,
		TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI') regdate
		FROM users
		<if test="searchType != null">
			<choose>
				<when test="searchType == 'id'">
					WHERE id = #{searchValue}
				</when>
				<when test="searchType == 'name'">
					WHERE name like #{searchValue}
				</when>
				<otherwise></otherwise>
			</choose>
		</if>
		ORDER BY regdate DESC))
		WHERE request_page = #{page}
	</select>

	<!-- 검색에 따른 검색 결과 수 -->
	<select id="countBySearch" parameterType="map" resultType="int">
		SELECT COUNT(id) count,
		FROM users
		<if test="searchType != null">
			<choose>
				<when test="searchType == 'id'">
					WHERE id = #{searchValue}
				</when>
				<when test="searchType == 'name'">
					WHERE name like #{searchValue}
				</when>
				<otherwise></otherwise>
			</choose>
		</if>
	</select>
</mapper>